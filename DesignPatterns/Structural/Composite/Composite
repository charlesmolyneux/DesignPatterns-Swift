Name: Composite
 
Pattern Type: Structural
Aliases: Object Tree
 
Summary:
 Adapter is a structural design pattern that lets you compose objects into tree structures.
 You can then work with these structures as if they were individual objects.
 
Example:
 You have two types of objects, Products and Boxes. A Box can contain several Products as well as smaller Boxes.
 Little Boxes can also contain Products and smaller Boxes.
 
Solution:
 Composite pattern suggests that you work with Boxes and Products through a common interface which can then calculate the total price.
 
Pros:
 - Can work with complex tree structures more conveniently. Use polymorphisim and recursion to advantage.
 - OCP: Can introduce new element types without breaking existing code.
 
Cons:
 - Can be difficult to provide a common interface for a classs whose functionality differs too greatly.
